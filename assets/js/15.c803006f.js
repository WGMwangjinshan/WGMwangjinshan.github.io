(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{493:function(t,e,s){t.exports=s.p+"assets/img/websocket1.c5034c6d.png"},494:function(t,e,s){t.exports=s.p+"assets/img/websocket2.9a53b0d6.png"},537:function(t,e,s){"use strict";s.r(e);var o=s(4),c=Object(o.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"websocket协议之基础"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#websocket协议之基础"}},[t._v("#")]),t._v(" Websocket协议之基础")]),t._v(" "),o("h2",{attrs:{id:"写在前面"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#写在前面"}},[t._v("#")]),t._v(" 写在前面")]),t._v(" "),o("p",[t._v("本文是说websocket的基础知识，其原理，其特点和使用场景，但websocket属于比较新的协议，所以本文是建立在你已经有相关的计算机网络知识基础来看，本文也会一直用简单明了的比喻和大白话来形容websocket。")]),t._v(" "),o("h2",{attrs:{id:"那啥是websocket？"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#那啥是websocket？"}},[t._v("#")]),t._v(" 那啥是websocket？")]),t._v(" "),o("p",[t._v("说句实话，在毕业找工作的开始我都不知道这个东西，也没有实际的使用过，当面试官问：“你简单说说你对websocket的理解”，我一脸懵逼，当时就深恶痛绝要弄懂这个，后来又自己看了nodeJS弄了一些简单的聊天室呀之类的，那我们回归正题：")]),t._v(" "),o("p",[t._v("老规矩，让我们看一看官网上的“文言文”版定义是啥？")]),t._v(" "),o("blockquote",[o("p",[t._v("WebSocket是一种通信协议，可在单个TCP连接上进行全双工通信。WebSocket使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以建立持久性的连接，并进行双向数据传输。")])]),t._v(" "),o("p",[t._v("其实针对这句话来说，重点的话就那么几句："),o("strong",[t._v("建立在TCP连接之上、允许服务端主动向客户端推送数据的双向通信、需要完成一次握手（不是直接就能连上的，得握手）")])]),t._v(" "),o("p",[t._v("盗一张阮一峰大神的图片给你们尝尝咸淡：")]),t._v(" "),o("p",[o("img",{attrs:{src:s(493),alt:"image"}})]),t._v(" "),o("p",[t._v("看完上面的内容，我就做一下对官方定义的白话翻译：")]),t._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[t._v("Websocket白话翻译")]),t._v(" "),o("p",[t._v("WebSocket就是和http他们一样的一种网络通信协议，建立在一个TCP上。客户端和服务器通过TCP完成一次握手之后，两者就能互相发数据（重点是服务器也能给客户端发了），所以双方的连接生命周期更长，是持久的连接，通过这些方式实现了双向数据传输，让两者的数据交换变得更加简单。")])]),t._v(" "),o("h2",{attrs:{id:"websocket还有哪些特点？"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#websocket还有哪些特点？"}},[t._v("#")]),t._v(" websocket还有哪些特点？")]),t._v(" "),o("p",[t._v("除了我们上面说的那些之外，还有一些其他的优化特点：")]),t._v(" "),o("ul",[o("li",[t._v("握手阶段采用 HTTP 协议。")]),t._v(" "),o("li",[t._v("数据格式轻量，性能开销小。客户端与服务端进行数据交换时，服务端到客户端的数据包头只有2到10字节，客户端到服务端需要加上另外4字节的掩码。HTTP每次都需要携带完整头部。")]),t._v(" "),o("li",[t._v("更好的二进制支持，可以发送文本，和二进制数据")]),t._v(" "),o("li",[t._v("没有同源限制，客户端可以与任意服务器通信")]),t._v(" "),o("li",[t._v("协议标识符是ws（如果加密，则是wss），请求的地址就是后端支持websocket的API（服务器网址就是 URL）。")])]),t._v(" "),o("p",[t._v("再盗一张大神的图：")]),t._v(" "),o("p",[o("img",{attrs:{src:s(494),alt:"image"}})]),t._v(" "),o("h2",{attrs:{id:"那websocket怎么用？"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#那websocket怎么用？"}},[t._v("#")]),t._v(" 那websocket怎么用？")]),t._v(" "),o("p",[t._v("这个东西需要前后端一起配合来实现，但是别的后端语言我又不会，所以我只能用nodeJS来实现一下这个地方")]),t._v(" "),o("p",[t._v("针对nodeJS是用socket.io来实现，所以本部分单列一篇文章来说讲细节："),o("RouterLink",{attrs:{to:"/blogs/Net/2020/socketIO.html"}},[t._v("Websocket协议之Socket.io")]),t._v(" "),o("script",{attrs:{src:"../../../click2.js"}})],1)])}),[],!1,null,null,null);e.default=c.exports}}]);