(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{496:function(s,n,e){"use strict";e.r(n);var a=e(4),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("blockquote",[e("p",[s._v("split")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('"2:3:4:5".split(":")\t//将返回["2", "3", "4", "5"]\n"|a|b|c".split("|")\t//将返回["", "a", "b", "c"]\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("blockquote",[e("p",[s._v("sort")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('//字母排序\n<script type="text/javascript">\nvar arr = new Array(6)\narr[0] = "George"\narr[1] = "John"\narr[2] = "Thomas"\narr[3] = "James"\narr[4] = "Adrew"\narr[5] = "Martin"\n\ndocument.write(arr + "<br />")//George,John,Thomas,James,Adrew,Martin\ndocument.write(arr.sort())//Adrew,George,James,John,Martin,Thomas\n<\/script>\n\n//数字排序\n<script type="text/javascript">\n\nvar arr = new Array(6)\narr[0] = "10"\narr[1] = "5"\narr[2] = "40"\narr[3] = "25"\narr[4] = "1000"\narr[5] = "1"\n\ndocument.write(arr + "<br />")//10,5,40,25,1000,1\ndocument.write(arr.sort())//1,10,1000,25,40,5\n\n<\/script>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("blockquote",[e("p",[s._v("keys")])]),s._v(" "),e("p",[s._v("==这个是获取一个对象中所有属性的Object原生方法，取得的结果会返回一个数组，但是这个返回数组的内容还是会根据你传入的值类型来确定==")]),s._v(" "),e("ul",[e("li",[s._v("传入对象的话（返回属性名，且会自己排序）：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('var obj = {\'a\':\'123\',\'b\':\'345\'};\nconsole.log(Object.keys(obj));  //[\'a\',\'b\']\n \nvar obj1 = { 100: "a", 2: "b", 7: "c"};\nconsole.log(Object.keys(obj1)); // console: ["2", "7", "100"]\n \nvar obj2 = Object.create({}, { getFoo : { value : function () { return this.foo } } });\nobj2.foo = 1;\nconsole.log(Object.keys(obj2)); // console: ["foo"]\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("ul",[e("li",[s._v("传入字符串的话（返回索引）")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("var str = 'ab1234';\nconsole.log(Object.keys(obj));  //[0,1,2,3,4,5]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ul",[e("li",[s._v("传入一个构造函数的话（返回空数组或者是属性名）：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("var str = 'ab1234';\nconsole.log(Object.keys(obj));  //[0,1,2,3,4,5]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ul",[e("li",[s._v("传入数组的话（返回索引）")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("var str = 'ab1234';\nconsole.log(Object.keys(obj));  //[0,1,2,3,4,5]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("blockquote",[e("p",[s._v("trim")])]),s._v(" "),e("p",[s._v("去掉字符串前后的空白字符")]),s._v(" "),e("p",[e("strong",[s._v("衍生")])]),s._v(" "),e("ul",[e("li",[e("p",[s._v("ltrim\n删除左侧空白字符")])]),s._v(" "),e("li",[e("p",[s._v("rtrim\n删除右侧空白字符")])])]),s._v(" "),e("blockquote",[e("p",[s._v("some和every")])]),s._v(" "),e("p",[s._v("==every()是对数组中每一项运行给定函数，如果该函数所有一项返回true,则返回true。一旦有一项不满足则返回flase==")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("                //every满足所有则返回true\n                const checkee=this.cart.every(function(item){\n                    return item.check==true\n                })\n                //当所有商品选中时  全选框也被选中\n                if(checkee){\n                    console.log(111)\n                    $('.quan').prop('checked','checked')\n                }else{\n                    $('.quan')[0].checked=false\n                }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("==some()是对数组中每一项运行给定函数，如果该函数满足任一项返回true，则返回true==")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("        var a=[1,2,4,69,56,89]\n　　　　 var some1=a.some((item)=>{\n                return item > 88\n            })\n        console.log(some1)//true\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("blockquote",[e("p",[s._v("*Object.assign()")])]),s._v(" "),e("p",[e("strong",[s._v("这个一个关于深拷贝和浅拷贝的部分，所以这个地方我会多记录一点：")])]),s._v(" "),e("p",[e("em",[s._v("按照我自己的理解来看，深拷贝和浅拷贝都是拷贝一个可枚举属性的值，但是两者的区别就是是否开辟出一块新的区域来存储这个拷贝出来的值（我认为会影响到数据的安全问题）。")]),s._v("\n==在这个部分我只会说object.assign,我将会在另外一个md文档中展开说我的理解。==")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\x3c!--Object.assign() 方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象。--\x3e\n\x3c!--Object.assign(target, ...sources)    【target：目标对象（复制出来的那个值）】，【souce：源对象（可多个，被复制的那个值）】--\x3e\n\x3c!--举个栗子：--\x3e\nconst object1 = {\n  a: 1,\n  b: 2,\n  c: 3\n};\n\nconst object2 = Object.assign({c: 4, d: 5}, object1);\n\nconsole.log(object2.c, object2.d);\nconsole.log(object1)  // { a: 1, b: 2, c: 3 }\nconsole.log(object2)  // { c: 3, d: 5, a: 1, b: 2 }\n\n\x3c!--注意：--\x3e\n\x3c!--1.如果目标对象中的属性具有相同的键，则属性将被源对象中的属性覆盖。后面的源对象的属性将类似地覆盖前面的源对象的属性--\x3e\n\x3c!--2.Object.assign 方法只会拷贝源对象自身的并且可枚举的属性到目标对象。该方法使用源对象的[[Get]]和目标--\x3e\n\x3c!--对象的[[Set]]，所以它会调用相关 getter 和 setter。因此，它分配属性，而不仅仅是复制或定义新的属性。如--\x3e\n\x3c!--果合并源包含getter，这可能使其不适合将新属性合并到原型中。为了将属性定义（包括其可枚举性）复制到--\x3e\n\x3c!--原型，应使用Object.getOwnPropertyDescriptor()和Object.defineProperty() 。--\x3e\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[s._v("=="),e("strong",[s._v("对深浅拷贝会在另外一个md文档中详细的说")]),s._v("==")])])}),[],!1,null,null,null);n.default=t.exports}}]);