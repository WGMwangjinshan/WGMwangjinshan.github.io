(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{542:function(t,v,_){"use strict";_.r(v);var s=_(4),e=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"伪类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#伪类"}},[t._v("#")]),t._v(" 伪类")]),t._v(" "),_("p",[_("strong",[t._v("1:定义：css伪类用于向某些选择器添加特殊效果。")])]),t._v(" "),_("p",[t._v("伪类其实与普通的css类相类似，可以为已有的元素添加样式，但是他只有处于dom无法描述的状态下才能为文档树中的元素添加样式，所以将其称为伪类。(这种文档树无法描述的状态是什么呢？当一个元素在用户的不同行为下就变化成不同的状态这个行为的变化dom就无法描述，就要产生伪类，来为一些选择器添加特殊的效果)。")]),t._v(" "),_("p",[_("strong",[t._v("2:伪类选择器有哪些:")])]),t._v(" "),_("ul",[_("li",[t._v(":link向未被访问的链接添加样式（链接，看来是只用于a标签）")]),t._v(" "),_("li",[t._v(":visited向已被访问过的链接添加样式（链接，看来还是只用于a标签）")]),t._v(" "),_("li",[t._v(":hover当鼠标悬浮在元素上方时，向元素添加样式（没有特意指定必须是链接，所以这个标签被大量用于定义任何一个块/行元素在鼠标经过时的样式）")]),t._v(" "),_("li",[t._v(":active向被激活的元素添加样式（当鼠标点击时的样式，要注意是点击时的样式的变化，这个也不是只有超链接才能用的伪类选择器）")]),t._v(" "),_("li",[t._v(":focus向拥有键盘输入焦点的元素添加样式（如input输入框鼠标点击时产生背景颜色的变化，注意是键盘输入焦点。注意有些浏览器不支持此功能样式）")]),t._v(" "),_("li",[t._v(":first-child 用于匹配父元素中的第一个元素。例如E:first-child,找的是E元素，E元素必须是他的父元素的第一位元素（扩展【：nth-child(n)】用于匹配父元素的第n个子元素E，这个父元素必须是元素E的父元素。）。")]),t._v(" "),_("li",[t._v(":lang向带有指定lang属性的元素添加样式（在标签中设置lang的属性，在样式表中对这种确切lang属性值的元素进行样式的设定，即使你有能力为不同的语言定义特殊的规则）")]),t._v(" "),_("li")]),t._v(" "),_("p",[_("strong",[t._v("++！！！注意！！！：++")])]),t._v(" "),_("p",[t._v("++伪类选择器    ”：link”和“：visited“”只能用于定于链接的未被访问的样式和已被访问过的样式。++")]),t._v(" "),_("p",[t._v("++伪类选择器 “：hover“和”:active”可以用于定义任何一个块或行元素在鼠标经过时点击时的样式。++")]),t._v(" "),_("h2",{attrs:{id:"伪元素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#伪元素"}},[t._v("#")]),t._v(" 伪元素")]),t._v(" "),_("p",[_("strong",[t._v("1:伪元素用于创建一些不在文档树中的元素，并且为他添加样式，举个例子：使用伪元素”：：before”可以在一个元素前边增加一些文本，并且可以为这些文本添加一些样式，虽然用户可以看到这写文本，但是这些文本是不存在于文档树中的。")])]),t._v(" "),_("ul",[_("li",[t._v(":frist-letter用于向文本中的第一个字母添加样式")]),t._v(" "),_("li",[t._v(":first-line向文本的首行添加样式")]),t._v(" "),_("li",[t._v(":before在元素之前添加内容")]),t._v(" "),_("li",[t._v(":after在元素之后添加内容")])]),t._v(" "),_("h2",{attrs:{id:"二者区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二者区别"}},[t._v("#")]),t._v(" 二者区别")]),t._v(" "),_("p",[_("em",[t._v("（1）伪类和伪元素的最大区别就在于有没有创建一个文档树以外的元素。伪元素创建了一个文档树以外的元素（虚拟容器）并为他添加样式，这个容器不包含任何DOM元素但是可以包含内容。换句话说伪类和伪元素的区别就是伪类的操作对象是文档树中已有的元素，而伪元素则创建了一个文档树以外的元素。")])]),t._v(" "),_("p",[_("em",[t._v("（2）伪类使用的是单冒号，但是在css3中规定伪元素使用的双冒号，但是除了少部分的伪元素必须使用双冒号以外，像after还有before都是支持单冒号的。为了兼容性所以目前还是在使用一些常见的伪元素的时候采用单冒号较为稳妥。")])])])}),[],!1,null,null,null);v.default=e.exports}}]);